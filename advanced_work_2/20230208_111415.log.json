{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /data/apps/cuda/11.1\nNVCC: Cuda compilation tools, release 11.1, V11.1.74\nGCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)\nPyTorch: 1.8.1+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.1+cu111\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMDetection: 2.28.1+c14dd6c", "config": "model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=20,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            mask_size=28,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100,\n            mask_thr_binary=0.5)))\ndataset_type = 'VOCDataset'\ndata_root = '/data/public/PascalVOC/2007/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1000, 600),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=16,\n    workers_per_gpu=8,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='VOCDataset',\n            ann_file=\n            '/data/public/PascalVOC/2007/VOC2007/ImageSets/Main/trainval.txt',\n            img_prefix='/data/public/PascalVOC/2007/VOC2007/',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n                dict(type='RandomFlip', flip_ratio=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size_divisor=32),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n            ])),\n    val=dict(\n        type='VOCDataset',\n        ann_file='/data/public/PascalVOC/2007/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/data/public/PascalVOC/2007/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1000, 600),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file='/data/public/PascalVOC/2007/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/data/public/PascalVOC/2007/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1000, 600),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/HOME/scz0bcq/run/mmdetection/checkpoints/mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=16)\nwork_dir = './work_dirs/mask_rcnn_r50_fpn_1x_voc07'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 344755680, "exp_name": "mask_rcnn_r50_fpn_1x_voc07.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00198, "memory": 14795, "data_time": 0.0852, "loss_rpn_cls": 0.01597, "loss_rpn_bbox": 0.01185, "loss_cls": 1.0057, "acc": 79.94141, "loss_bbox": 0.31015, "loss": 1.34367, "time": 1.0675}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00398, "memory": 14795, "data_time": 0.01971, "loss_rpn_cls": 0.01053, "loss_rpn_bbox": 0.01167, "loss_cls": 0.28772, "acc": 92.87646, "loss_bbox": 0.29183, "loss": 0.60174, "time": 0.99207}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00597, "memory": 14795, "data_time": 0.01893, "loss_rpn_cls": 0.00933, "loss_rpn_bbox": 0.01163, "loss_cls": 0.21486, "acc": 94.2146, "loss_bbox": 0.24471, "loss": 0.48054, "time": 0.99535}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00797, "memory": 14795, "data_time": 0.01881, "loss_rpn_cls": 0.00905, "loss_rpn_bbox": 0.01282, "loss_cls": 0.14447, "acc": 95.48877, "loss_bbox": 0.20142, "loss": 0.36776, "time": 0.99525}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00997, "memory": 14795, "data_time": 0.0196, "loss_rpn_cls": 0.00993, "loss_rpn_bbox": 0.01207, "loss_cls": 0.11875, "acc": 95.88696, "loss_bbox": 0.17352, "loss": 0.31427, "time": 0.99183}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01197, "memory": 14795, "data_time": 0.01961, "loss_rpn_cls": 0.00854, "loss_rpn_bbox": 0.01263, "loss_cls": 0.11412, "acc": 96.04956, "loss_bbox": 0.16075, "loss": 0.29604, "time": 0.99564}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.01397, "memory": 14795, "data_time": 0.01963, "loss_rpn_cls": 0.00748, "loss_rpn_bbox": 0.01173, "loss_cls": 0.11146, "acc": 96.06714, "loss_bbox": 0.15314, "loss": 0.28381, "time": 0.97705}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.01596, "memory": 14795, "data_time": 0.01893, "loss_rpn_cls": 0.00764, "loss_rpn_bbox": 0.0114, "loss_cls": 0.11026, "acc": 96.14062, "loss_bbox": 0.14825, "loss": 0.27754, "time": 0.9886}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.01796, "memory": 14795, "data_time": 0.01884, "loss_rpn_cls": 0.00727, "loss_rpn_bbox": 0.01159, "loss_cls": 0.10822, "acc": 96.21924, "loss_bbox": 0.14487, "loss": 0.27195, "time": 0.97834}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.01996, "memory": 14795, "data_time": 0.01941, "loss_rpn_cls": 0.00708, "loss_rpn_bbox": 0.01195, "loss_cls": 0.11342, "acc": 96.02295, "loss_bbox": 0.15217, "loss": 0.28462, "time": 0.98238}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.02, "memory": 14795, "data_time": 0.01997, "loss_rpn_cls": 0.00807, "loss_rpn_bbox": 0.0129, "loss_cls": 0.11702, "acc": 95.80664, "loss_bbox": 0.16277, "loss": 0.30075, "time": 0.98816}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.02, "memory": 14795, "data_time": 0.01916, "loss_rpn_cls": 0.00754, "loss_rpn_bbox": 0.01186, "loss_cls": 0.11572, "acc": 95.98535, "loss_bbox": 0.14577, "loss": 0.2809, "time": 0.98323}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.02, "memory": 14795, "data_time": 0.01873, "loss_rpn_cls": 0.00732, "loss_rpn_bbox": 0.01104, "loss_cls": 0.10447, "acc": 96.31885, "loss_bbox": 0.13394, "loss": 0.25677, "time": 0.97765}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.02, "memory": 14795, "data_time": 0.01889, "loss_rpn_cls": 0.00757, "loss_rpn_bbox": 0.01272, "loss_cls": 0.10341, "acc": 96.31689, "loss_bbox": 0.14274, "loss": 0.26644, "time": 0.98163}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.02, "memory": 14795, "data_time": 0.01888, "loss_rpn_cls": 0.0075, "loss_rpn_bbox": 0.01211, "loss_cls": 0.09952, "acc": 96.41235, "loss_bbox": 0.13747, "loss": 0.2566, "time": 0.96053}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.02, "memory": 14795, "data_time": 0.01926, "loss_rpn_cls": 0.00653, "loss_rpn_bbox": 0.0108, "loss_cls": 0.09779, "acc": 96.53564, "loss_bbox": 0.12908, "loss": 0.24419, "time": 0.97976}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.02, "memory": 14795, "data_time": 0.01937, "loss_rpn_cls": 0.00637, "loss_rpn_bbox": 0.01169, "loss_cls": 0.10378, "acc": 96.26367, "loss_bbox": 0.14254, "loss": 0.26439, "time": 0.99422}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.02, "memory": 14795, "data_time": 0.0188, "loss_rpn_cls": 0.00579, "loss_rpn_bbox": 0.01179, "loss_cls": 0.10156, "acc": 96.25049, "loss_bbox": 0.14239, "loss": 0.26153, "time": 0.98156}
{"mode": "val", "epoch": 1, "iter": 4952, "lr": 0.02, "mAP": 0.80351, "AP50": 0.804}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.02, "memory": 14795, "data_time": 0.07933, "loss_rpn_cls": 0.00519, "loss_rpn_bbox": 0.0113, "loss_cls": 0.08746, "acc": 96.76831, "loss_bbox": 0.12917, "loss": 0.23312, "time": 1.0467}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.02, "memory": 14795, "data_time": 0.01958, "loss_rpn_cls": 0.00454, "loss_rpn_bbox": 0.01066, "loss_cls": 0.09098, "acc": 96.62256, "loss_bbox": 0.13336, "loss": 0.23953, "time": 0.99059}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.02, "memory": 14795, "data_time": 0.02006, "loss_rpn_cls": 0.0046, "loss_rpn_bbox": 0.01087, "loss_cls": 0.09179, "acc": 96.63574, "loss_bbox": 0.13147, "loss": 0.23872, "time": 0.98805}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.02, "memory": 14795, "data_time": 0.01908, "loss_rpn_cls": 0.00453, "loss_rpn_bbox": 0.01081, "loss_cls": 0.0851, "acc": 96.83545, "loss_bbox": 0.12811, "loss": 0.22855, "time": 0.9751}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.02, "memory": 14795, "data_time": 0.02062, "loss_rpn_cls": 0.00406, "loss_rpn_bbox": 0.01016, "loss_cls": 0.08492, "acc": 96.77148, "loss_bbox": 0.12444, "loss": 0.22358, "time": 0.97894}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.02, "memory": 14795, "data_time": 0.01901, "loss_rpn_cls": 0.00395, "loss_rpn_bbox": 0.01005, "loss_cls": 0.08743, "acc": 96.84692, "loss_bbox": 0.12721, "loss": 0.22864, "time": 0.98203}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.02, "memory": 14795, "data_time": 0.01897, "loss_rpn_cls": 0.00548, "loss_rpn_bbox": 0.01082, "loss_cls": 0.08254, "acc": 96.90234, "loss_bbox": 0.12775, "loss": 0.22659, "time": 0.96598}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.02, "memory": 14795, "data_time": 0.01907, "loss_rpn_cls": 0.00426, "loss_rpn_bbox": 0.01027, "loss_cls": 0.07675, "acc": 97.10864, "loss_bbox": 0.11939, "loss": 0.21067, "time": 0.97774}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.02, "memory": 14795, "data_time": 0.01958, "loss_rpn_cls": 0.00475, "loss_rpn_bbox": 0.01113, "loss_cls": 0.08369, "acc": 96.8374, "loss_bbox": 0.12538, "loss": 0.22496, "time": 0.98053}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.02, "memory": 14795, "data_time": 0.02001, "loss_rpn_cls": 0.00521, "loss_rpn_bbox": 0.01112, "loss_cls": 0.08434, "acc": 96.91162, "loss_bbox": 0.12347, "loss": 0.22414, "time": 0.99079}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.02, "memory": 14795, "data_time": 0.01906, "loss_rpn_cls": 0.00382, "loss_rpn_bbox": 0.01136, "loss_cls": 0.08239, "acc": 96.8811, "loss_bbox": 0.12993, "loss": 0.2275, "time": 0.98173}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.02, "memory": 14795, "data_time": 0.01896, "loss_rpn_cls": 0.00402, "loss_rpn_bbox": 0.0102, "loss_cls": 0.0823, "acc": 96.86963, "loss_bbox": 0.12441, "loss": 0.22092, "time": 0.98543}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.02, "memory": 14795, "data_time": 0.02063, "loss_rpn_cls": 0.00409, "loss_rpn_bbox": 0.01004, "loss_cls": 0.07925, "acc": 97.0083, "loss_bbox": 0.11695, "loss": 0.21033, "time": 0.98846}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.02, "memory": 14795, "data_time": 0.0202, "loss_rpn_cls": 0.00402, "loss_rpn_bbox": 0.01051, "loss_cls": 0.08, "acc": 96.9563, "loss_bbox": 0.12215, "loss": 0.21669, "time": 0.98757}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.02, "memory": 14795, "data_time": 0.01932, "loss_rpn_cls": 0.0034, "loss_rpn_bbox": 0.01011, "loss_cls": 0.08196, "acc": 96.87891, "loss_bbox": 0.12653, "loss": 0.222, "time": 0.99726}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.02, "memory": 14795, "data_time": 0.01923, "loss_rpn_cls": 0.00308, "loss_rpn_bbox": 0.00993, "loss_cls": 0.07636, "acc": 97.02319, "loss_bbox": 0.12205, "loss": 0.21141, "time": 0.98958}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.02, "memory": 14795, "data_time": 0.01993, "loss_rpn_cls": 0.00387, "loss_rpn_bbox": 0.01057, "loss_cls": 0.08247, "acc": 96.87476, "loss_bbox": 0.12302, "loss": 0.21992, "time": 0.98501}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.02, "memory": 14795, "data_time": 0.02005, "loss_rpn_cls": 0.00397, "loss_rpn_bbox": 0.01102, "loss_cls": 0.08045, "acc": 96.95239, "loss_bbox": 0.12391, "loss": 0.21934, "time": 0.98553}
{"mode": "val", "epoch": 2, "iter": 4952, "lr": 0.02, "mAP": 0.80797, "AP50": 0.808}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.02, "memory": 14796, "data_time": 0.08225, "loss_rpn_cls": 0.00325, "loss_rpn_bbox": 0.00978, "loss_cls": 0.06858, "acc": 97.34863, "loss_bbox": 0.11336, "loss": 0.19497, "time": 1.06378}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.02, "memory": 14796, "data_time": 0.01892, "loss_rpn_cls": 0.00285, "loss_rpn_bbox": 0.00971, "loss_cls": 0.06683, "acc": 97.43237, "loss_bbox": 0.11099, "loss": 0.19037, "time": 0.98147}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.02, "memory": 14796, "data_time": 0.01929, "loss_rpn_cls": 0.00252, "loss_rpn_bbox": 0.00922, "loss_cls": 0.06442, "acc": 97.49243, "loss_bbox": 0.10792, "loss": 0.18408, "time": 0.98577}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.02, "memory": 14796, "data_time": 0.01907, "loss_rpn_cls": 0.00311, "loss_rpn_bbox": 0.01013, "loss_cls": 0.07166, "acc": 97.21484, "loss_bbox": 0.11881, "loss": 0.20371, "time": 0.98552}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.02, "memory": 14796, "data_time": 0.01984, "loss_rpn_cls": 0.00347, "loss_rpn_bbox": 0.01072, "loss_cls": 0.07323, "acc": 97.19678, "loss_bbox": 0.1197, "loss": 0.20712, "time": 0.98223}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.02, "memory": 14796, "data_time": 0.01976, "loss_rpn_cls": 0.00264, "loss_rpn_bbox": 0.00906, "loss_cls": 0.0646, "acc": 97.5271, "loss_bbox": 0.1028, "loss": 0.1791, "time": 0.97993}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.02, "memory": 14796, "data_time": 0.0195, "loss_rpn_cls": 0.00345, "loss_rpn_bbox": 0.01018, "loss_cls": 0.06882, "acc": 97.3479, "loss_bbox": 0.11068, "loss": 0.19313, "time": 0.99669}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.02, "memory": 14796, "data_time": 0.01919, "loss_rpn_cls": 0.00228, "loss_rpn_bbox": 0.00897, "loss_cls": 0.06138, "acc": 97.61743, "loss_bbox": 0.10416, "loss": 0.17679, "time": 0.98196}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.02, "memory": 14796, "data_time": 0.02026, "loss_rpn_cls": 0.00268, "loss_rpn_bbox": 0.00915, "loss_cls": 0.06254, "acc": 97.56665, "loss_bbox": 0.10459, "loss": 0.17896, "time": 0.97922}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.02, "memory": 14796, "data_time": 0.01994, "loss_rpn_cls": 0.00304, "loss_rpn_bbox": 0.00969, "loss_cls": 0.06708, "acc": 97.38989, "loss_bbox": 0.11545, "loss": 0.19526, "time": 0.98702}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.02, "memory": 14796, "data_time": 0.0196, "loss_rpn_cls": 0.00318, "loss_rpn_bbox": 0.00932, "loss_cls": 0.06819, "acc": 97.38477, "loss_bbox": 0.1083, "loss": 0.189, "time": 0.99452}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.02, "memory": 14796, "data_time": 0.0202, "loss_rpn_cls": 0.00282, "loss_rpn_bbox": 0.01006, "loss_cls": 0.06535, "acc": 97.49048, "loss_bbox": 0.10904, "loss": 0.18726, "time": 0.98056}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.02, "memory": 14796, "data_time": 0.01962, "loss_rpn_cls": 0.00265, "loss_rpn_bbox": 0.00981, "loss_cls": 0.06411, "acc": 97.50439, "loss_bbox": 0.10658, "loss": 0.18315, "time": 0.98872}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.02, "memory": 14796, "data_time": 0.01919, "loss_rpn_cls": 0.0028, "loss_rpn_bbox": 0.00902, "loss_cls": 0.06019, "acc": 97.65088, "loss_bbox": 0.10195, "loss": 0.17395, "time": 0.9941}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.02, "memory": 14796, "data_time": 0.02042, "loss_rpn_cls": 0.00286, "loss_rpn_bbox": 0.01026, "loss_cls": 0.06239, "acc": 97.5708, "loss_bbox": 0.10873, "loss": 0.18424, "time": 0.98725}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.02, "memory": 14796, "data_time": 0.01929, "loss_rpn_cls": 0.0027, "loss_rpn_bbox": 0.00986, "loss_cls": 0.06291, "acc": 97.54004, "loss_bbox": 0.10844, "loss": 0.18391, "time": 0.99766}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.02, "memory": 14796, "data_time": 0.01943, "loss_rpn_cls": 0.00296, "loss_rpn_bbox": 0.00974, "loss_cls": 0.06562, "acc": 97.45386, "loss_bbox": 0.1111, "loss": 0.18942, "time": 0.99041}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.02, "memory": 14796, "data_time": 0.02026, "loss_rpn_cls": 0.00235, "loss_rpn_bbox": 0.01007, "loss_cls": 0.06344, "acc": 97.50952, "loss_bbox": 0.11036, "loss": 0.18622, "time": 1.00541}
{"mode": "val", "epoch": 3, "iter": 4952, "lr": 0.02, "mAP": 0.80379, "AP50": 0.804}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.02, "memory": 14796, "data_time": 0.08279, "loss_rpn_cls": 0.00233, "loss_rpn_bbox": 0.00882, "loss_cls": 0.05726, "acc": 97.80225, "loss_bbox": 0.10111, "loss": 0.16952, "time": 1.07267}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.02, "memory": 14796, "data_time": 0.01995, "loss_rpn_cls": 0.00211, "loss_rpn_bbox": 0.00912, "loss_cls": 0.05507, "acc": 97.85571, "loss_bbox": 0.09748, "loss": 0.16377, "time": 0.99695}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.02, "memory": 14796, "data_time": 0.01997, "loss_rpn_cls": 0.00226, "loss_rpn_bbox": 0.00886, "loss_cls": 0.05253, "acc": 97.91772, "loss_bbox": 0.09628, "loss": 0.15992, "time": 0.99208}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.02, "memory": 14796, "data_time": 0.01967, "loss_rpn_cls": 0.00238, "loss_rpn_bbox": 0.0088, "loss_cls": 0.05461, "acc": 97.85327, "loss_bbox": 0.09338, "loss": 0.15917, "time": 0.99339}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.02, "memory": 14796, "data_time": 0.01948, "loss_rpn_cls": 0.00211, "loss_rpn_bbox": 0.009, "loss_cls": 0.0526, "acc": 97.92676, "loss_bbox": 0.09688, "loss": 0.16058, "time": 0.99029}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.02, "memory": 14796, "data_time": 0.01975, "loss_rpn_cls": 0.00181, "loss_rpn_bbox": 0.00887, "loss_cls": 0.05296, "acc": 97.94019, "loss_bbox": 0.09937, "loss": 0.16302, "time": 1.0018}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.02, "memory": 14796, "data_time": 0.02, "loss_rpn_cls": 0.00178, "loss_rpn_bbox": 0.00847, "loss_cls": 0.05249, "acc": 97.93384, "loss_bbox": 0.09688, "loss": 0.15962, "time": 1.00389}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.02, "memory": 14796, "data_time": 0.01998, "loss_rpn_cls": 0.00214, "loss_rpn_bbox": 0.00954, "loss_cls": 0.05768, "acc": 97.74463, "loss_bbox": 0.10266, "loss": 0.17202, "time": 0.99325}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.02, "memory": 14796, "data_time": 0.01944, "loss_rpn_cls": 0.00198, "loss_rpn_bbox": 0.00881, "loss_cls": 0.05097, "acc": 97.98511, "loss_bbox": 0.08796, "loss": 0.14972, "time": 0.98681}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.02, "memory": 14796, "data_time": 0.02089, "loss_rpn_cls": 0.00184, "loss_rpn_bbox": 0.00894, "loss_cls": 0.05413, "acc": 97.86841, "loss_bbox": 0.10091, "loss": 0.16581, "time": 1.00263}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.02, "memory": 14796, "data_time": 0.01915, "loss_rpn_cls": 0.0022, "loss_rpn_bbox": 0.009, "loss_cls": 0.05608, "acc": 97.82031, "loss_bbox": 0.09918, "loss": 0.16646, "time": 0.98753}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.02, "memory": 14796, "data_time": 0.01952, "loss_rpn_cls": 0.002, "loss_rpn_bbox": 0.009, "loss_cls": 0.05345, "acc": 97.85913, "loss_bbox": 0.09912, "loss": 0.16357, "time": 0.99565}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.02, "memory": 14796, "data_time": 0.02649, "loss_rpn_cls": 0.00204, "loss_rpn_bbox": 0.00863, "loss_cls": 0.0536, "acc": 97.89258, "loss_bbox": 0.09855, "loss": 0.16282, "time": 0.99392}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.02, "memory": 14796, "data_time": 0.02117, "loss_rpn_cls": 0.00206, "loss_rpn_bbox": 0.00834, "loss_cls": 0.05082, "acc": 97.99341, "loss_bbox": 0.09167, "loss": 0.15289, "time": 1.04287}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 0.02, "memory": 14796, "data_time": 0.0207, "loss_rpn_cls": 0.00228, "loss_rpn_bbox": 0.00918, "loss_cls": 0.05429, "acc": 97.87085, "loss_bbox": 0.09971, "loss": 0.16546, "time": 0.98672}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.02, "memory": 14796, "data_time": 0.02065, "loss_rpn_cls": 0.00206, "loss_rpn_bbox": 0.00907, "loss_cls": 0.05437, "acc": 97.88135, "loss_bbox": 0.09656, "loss": 0.16206, "time": 1.00298}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 0.02, "memory": 14796, "data_time": 0.02013, "loss_rpn_cls": 0.00219, "loss_rpn_bbox": 0.00895, "loss_cls": 0.05597, "acc": 97.83887, "loss_bbox": 0.09482, "loss": 0.16193, "time": 0.9885}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.02, "memory": 14796, "data_time": 0.02062, "loss_rpn_cls": 0.00233, "loss_rpn_bbox": 0.00931, "loss_cls": 0.05433, "acc": 97.8833, "loss_bbox": 0.09763, "loss": 0.1636, "time": 0.9944}
{"mode": "val", "epoch": 4, "iter": 4952, "lr": 0.02, "mAP": 0.79884, "AP50": 0.799}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.02, "memory": 14796, "data_time": 0.07986, "loss_rpn_cls": 0.00155, "loss_rpn_bbox": 0.00839, "loss_cls": 0.0445, "acc": 98.25708, "loss_bbox": 0.0881, "loss": 0.14254, "time": 1.0681}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.02, "memory": 14796, "data_time": 0.01981, "loss_rpn_cls": 0.00186, "loss_rpn_bbox": 0.00861, "loss_cls": 0.04652, "acc": 98.18042, "loss_bbox": 0.0888, "loss": 0.14579, "time": 1.00129}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.02, "memory": 14796, "data_time": 0.02028, "loss_rpn_cls": 0.0015, "loss_rpn_bbox": 0.0085, "loss_cls": 0.04757, "acc": 98.10864, "loss_bbox": 0.09074, "loss": 0.14832, "time": 1.00367}
